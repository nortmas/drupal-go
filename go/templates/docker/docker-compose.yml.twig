version: '3'

services:
  mariadb:
    image: 'wodby/mariadb:{{ mariadb.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: drupal
      MYSQL_USER: drupal
      MYSQL_PASSWORD: drupal
{% if deploy != true %}
    ports:
      - 3306:3306
{% endif %}
    volumes:
{% if deploy != true %}
      - ./db:/docker-entrypoint-initdb.d
{% endif %}
      - db:/var/lib/mysql

  php:
    image: 'wodby/drupal-php:{{ php.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    environment:
      DB_HOST: mariadb
      DB_USER: drupal
      DB_PASSWORD: drupal
      DB_NAME: drupal
      DB_DRIVER: mysql
{% if deploy == true %}
      GIT_USER_NAME: 'wodby-dev'
{% endif %}
{% if php.xdebug and deploy != true %}
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_XDEBUG_REMOTE_CONNECT_BACK: "${PHP_XDEBUG_REMOTE_CONNECT_BACK}"
      PHP_XDEBUG_REMOTE_HOST: host.docker.internal
{% if webgrind.enable %}
      PHP_XDEBUG_PROFILER_ENABLE: 1
      PHP_XDEBUG_PROFILER_ENABLE_TRIGGER: 1
      PHP_XDEBUG_PROFILER_ENABLE_TRIGGER_VALUE: 1
      PHP_XDEBUG_PROFILER_OUTPUT_DIR: /mnt/files/xdebug/profiler
      PHP_XDEBUG_TRACE_OUTPUT_DIR: /mnt/files/xdebug/traces
{% endif %}
{% endif %}
{% if mailhog.enable %}
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
{% endif %}
{% if blackfire.enable %}
      PHP_BLACKFIRE: 1
{% endif %}
    volumes:
{% if deploy == true %}
      - /tmp/:/tmp/
{% endif %}
      - ./:/var/www/html
      - ./drush:/etc/drush
{% if deploy != true %}
      - ~/.ssh/id_rsa:/home/wodby/.ssh/id_rsa
{% endif %}
{% if webgrind.enable %}
      - files:/mnt/files
{% endif %}
{% if deploy == true %}
    networks:
      - default
      - proxy
{% endif %}

  {{ webserver.type }}:
{% if webserver.type == 'nginx' %}
    image: 'wodby/drupal-nginx:{{ webserver.nginx_tag }}'
{% elseif webserver.type == 'apache' %}
    image: 'wodby/apache:{{ webserver.apache_tag }}'
{% endif %}
{% if deploy == true %}
    restart: always
{% endif %}
    depends_on:
      - php
    environment:
{% if webserver.type == 'nginx' %}
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: 'off'
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_VHOST_PRESET: drupal8
{% elseif webserver.type == 'apache' %}
      APACHE_LOG_LEVEL: debug
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/web
{% endif %}
      {{ webserver.type|upper }}_BACKEND_HOST: php
    volumes:
      - ./:/var/www/html
    labels:
{% if deploy != true %}
      traefik.port: '80'
{% endif %}
{% if deploy == true %}
      traefik.enable: 'true'
      traefik.docker.network: 'proxy'
      traefik.frontend.protocol: 'https'
      traefik.frontend.port: '443'
{% endif %}
      traefik.frontend.rule: 'Host:{{ domains }}'
{% if deploy == true %}
    networks:
      - default
      - proxy
{% endif %}
{% if varnish.enable %}

  varnish:
    image: 'wodby/drupal-varnish:{{ varnish.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    depends_on:
      - {{ webserver.type }}
    environment:
      VARNISH_SECRET: secret
      VARNISH_BACKEND_HOST: {{ webserver.type }}
      VARNISH_BACKEND_PORT: 80
    labels:
      traefik.backend: '{{ project_machine_name }}_varnish_1'
      traefik.port: '6081'
      traefik.frontend.rule: 'Host:varnish.{{ service_domain }}'
{% endif %}
{% if redis.enable %}

  redis:
    image: 'wodby/redis:{{ redis.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
{% endif %}
{% if dbbrowser.enable and deploy != true %}
{% if dbbrowser.type == 'adminer' %}

  adminer:
    image: 'wodby/adminer:{{ dbbrowser.adminer_tag }}'
    environment:
      ADMINER_SALT: adminer-salt
    labels:
      traefik.backend: '{{ project_machine_name }}_adminer_1'
      traefik.port: '9000'
      traefik.frontend.rule: 'Host:adminer.{{ service_domain }}'
{% elseif dbbrowser.type == 'pma' %}

  pma:
    image: 'phpmyadmin/phpmyadmin'
    environment:
      PMA_HOST: mariadb
      PMA_USER: drupal
      PMA_PASSWORD: drupal
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      traefik.backend: '{{ project_machine_name }}_pma_1'
      traefik.port: '80'
      traefik.frontend.rule: 'Host:pma.{{ service_domain }}'
{% endif %}
{% endif %}
{% if solr.enable %}

  solr:
    image: 'wodby/drupal-solr:{{ solr.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    environment:
      SOLR_HEAP: 1024m
    labels:
      traefik.backend: '{{ project_machine_name }}_solr_1'
      traefik.port: '8983'
      traefik.frontend.rule: 'Host:solr.{{ service_domain }}'
{% endif %}
{% if mailhog.enable %}

  mailhog:
    image: 'mailhog/mailhog'
{% if deploy == true %}
    restart: always
{% endif %}
    labels:
      traefik.backend: '{{ project_machine_name }}_mailhog_1'
      traefik.port: '8025'
      traefik.frontend.rule: 'Host:mailhog.{{ service_domain }}'
{% endif %}
{% if node.enable %}

  nodejs:
    image: 'wodby/drupal-node:{{ node.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    environment:
       NODE_SERVICE_KEY: '{{ node.key }}'
    labels:
      traefik.backend: 'nodejs'
      traefik.port: '8080'
      traefik.frontend.rule: 'Host:nodejs.{{ service_domain }}'
    volumes:
      - ./{{ node.path }}:/app
    command: sh -c 'npm install && npm run start'

  node:
    image: 'node:alpine'
{% if deploy == true %}
    restart: always
{% endif %}
    working_dir: /app
    labels:
      traefik.backend: '{{ project_machine_name }}_node_1'
      traefik.port: '3000'
      traefik.frontend.rule: 'Host:front.{{ service_domain }}'
    expose:
      - '3000'
    volumes:
      - ./{{ node.path }}:/app
    command: sh -c 'npm install && npm run start'
{% endif %}
{% if memcached.enable %}

  memcached:
{% if deploy == true %}
    restart: always
{% endif %}
    image: 'wodby/memcached:{{ memcached.tag }}'
{% endif %}
{% if rsyslog.enable %}

  rsyslog:
    image: 'wodby/rsyslog:{{ rsyslog.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
{% endif %}
{% if athenapdf.enable %}

  athenapdf:
    image: 'arachnysdocker/athenapdf-service:{{ athenapdf.tag }}'
{% if deploy == true %}
    restart: always
{% endif %}
    environment:
      WEAVER_AUTH_KEY: '{{ athenapdf.key }}'
      WEAVER_ATHENA_CMD: 'athenapdf -S'
      WEAVER_MAX_WORKERS: 10
      WEAVER_MAX_CONVERSION_QUEUE: 50
      WEAVER_WORKER_TIMEOUT: 90
      WEAVER_CONVERSION_FALLBACK: false
{% endif %}
{% if blackfire.enable and deploy != true %}

  blackfire:
    image: 'blackfire/blackfire'
    environment:
      BLACKFIRE_SERVER_ID: '{{ blackfire.id }}'
      BLACKFIRE_SERVER_TOKEN: '{{ blackfire.token }}'
{% endif %}
{% if webgrind.enable and deploy != true %}

  webgrind:
    # add XDEBUG_PROFILE=1 to your request to profile that
    image: 'wodby/webgrind:{{ webgrind.tag }}'
    environment:
      WEBGRIND_PROFILER_DIR: '/mnt/files/xdebug/profiler'
    labels:
      traefik.backend: '{{ project_machine_name }}_webgrind_1'
      traefik.port: '8080'
      traefik.frontend.rule: 'Host:webgrind.{{ service_domain }}'
    volumes:
      - files:/mnt/files
{% endif %}
{% if portainer.enable and deploy != true %}

  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.{{ service_domain }}'
{% endif %}
{% if behat.enable %}

  selenium:
    image: selenium/standalone-chrome
    restart: on-failure:5
    volumes:
      - /dev/shm:/dev/shm
    labels:
      - 'traefik.backend=selenium'
      - 'traefik.port=4444'
      - 'traefik.frontend.rule=Host:selenium.{{ service_domain }}'
    ports:
      - 5900:5900
{% endif %}
{% if deploy != true %}

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '{{ port }}:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
{% endif %}

volumes:
  db:
{% if deploy == true %}

networks:
  proxy:
    external: true
{% endif %}
